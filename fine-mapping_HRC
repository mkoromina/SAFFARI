#from ossaudiodev import SNDCTL_DSP_SUBDIVIDE
from numpy import expand_dims
import pandas as pd

SS = ["suicide_gwas"]  #or daner_bip_pgc3 #change params (files names, top loci and Neff accordingly)
CHR = list(range(1,23))

LD_UKB_ranges= pd.read_table("resources/suicide_gwas_loci_ranges.tsv", sep='\t', dtype=str).set_index("SNP", drop=False)
SNP = list(LD_UKB_ranges.index)


rule all:
 	input:
 	 	# expand("output/{ss}_neff.munged.parquet", ss = SS),
 	 	# expand("output/priors_suicide/suicide_l2-ldsc.{chr}.snpvar_ridge_constrained.gz", chr = CHR),
 	 	# expand("output/priors_suicide/suicide_l2-ldsc.{chr}.snpvar_ridge.gz", chr = CHR),
 		expand("output/polyfun_susie_HRC_finemap/{ss}_finemap.{snp}.gz", ss = SS, snp = LD_UKB_ranges.index.tolist()),
 		expand("output/polyfun_susie_HRC_finemap/{ss}_polyfun_susie_all.txt.gz", ss = SS),
		expand("output/polyfun_finemap_HRC_finemap/{ss}_finemap_finemap.{snp}.gz", ss = SS, snp = LD_UKB_ranges.index.tolist()),
		expand("output/polyfun_finemap_HRC_finemap/{ss}_polyfun_finemap_all.txt.gz", ss = SS),
		expand("output/only_finemap_HRC_finemap/{ss}_only_finemap.{snp}.gz", ss = SS, snp = LD_UKB_ranges.index.tolist()),
		expand("output/only_finemap_HRC_finemap/{ss}_only_finemap_all.txt.gz", ss = SS),
		expand("output/only_susie_HRC_finemap/{ss}_only_susie.{snp}.gz", ss = SS, snp = LD_UKB_ranges.index.tolist()),
		expand("output/only_susie_HRC_finemap/{ss}_only_susie_all.txt.gz", ss = SS)

#Run the following two rules only if you have not run the Snakemake_UKB pipeline
# rule munge_polyfun:
#       	input:  "resources/{ss}.gz" 
#       	output: "output/{ss}_neff.munged.parquet"
#       	conda: "envs/polyfun.yml"
#       	resources: mem_mb= 1000
#       	shell:
#       		"""
#       		python /sc/arion/projects/psychgen/software/polyfun/munge_polyfun_sumstats.py \
#       		--sumstats {input} \
#       		--out {output} \
#       		--min-info 0.6 \
#       		--min-maf 0		#0.001 is the default but this arg wont work in ricopili formatted gwas
#       		"""

# rule l2reg_sldsc: 
#       	input: 
#       		gwas = "output/suicide_gwas_neff.munged.parquet"
#       	output: 
#       		output1 = expand("output/priors_suicide/suicide_l2-ldsc.{chr}.snpvar_ridge.gz", chr = CHR),
#       		output2 = expand("output/priors_suicide/suicide_l2-ldsc.{chr}.snpvar_ridge_constrained.gz", chr = CHR) 
#       	params:
#       		weights = "/weights.UKB.",
#       		ldscores = "/baselineLF2.2.UKB.",
#       		prefix = "output/priors_suicide/suicide_l2-ldsc"
#       	conda: "envs/polyfun.yml"
#         resources: mem_mb = 96000
#       	shell:
#       		"""
#       		python /sc/arion/projects/psychgen/software/polyfun/polyfun.py \
#           		--compute-h2-L2 \
#           		--no-partitions \
#           		--output-prefix {params.prefix} \
#           		--sumstats {input.gwas} \
#   	   			--allow-missing \
#           		--ref-ld-chr /sc/arion/projects/ad-omics/ashvin/UKBB_priors/hg19_baselineLF2.2.UKB{params.ldscores} \
#       			--w-ld-chr /sc/arion/projects/ad-omics/ashvin/UKBB_priors/hg19_baselineLF2.2.UKB{params.weights}
#       		"""

rule run_polyfun_susie:
 	input:
 	    snpvar = expand("output/priors_suicide/suicide_l2-ldsc.{chr}.snpvar_ridge_constrained.gz", chr = CHR)
 	output:
 		output = expand("output/polyfun_susie_HRC_finemap/{{ss}}_finemap.{{snp}}.gz", snp = LD_UKB_ranges.index.tolist())
 	params:
 	 	chrom = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['chrom_orig'],
 		pos = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['BP'],
 		start = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['range.left'],
 		end = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['range.right'],
		ld_ranges = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['file'] 
 	conda: "envs/polyfun.yml"
	resources: mem_mb= 120000
 	shell: 
 		"""
 		python /sc/arion/projects/psychgen/software/polyfun/finemapper.py \
 		--geno /sc/arion/projects/psychgen/resources/genotype_ref_panel/HRC_fromBroad/chr1_22c/pop_EUR/HRC.r1-1.EGA.GRCh37.chr{params.chrom}.impute.plink.EUR \
 		--sumstats /sc/arion/projects/psychgen/bipolar/sandbox/output/priors_suicide/suicide_l2-ldsc.{params.chrom}.snpvar_ridge_constrained.gz \
 		--n 126872 \
 		--chr {params.chrom} \
 		--start {params.start} \
 		--end {params.end} \
 		--method susie \
 		--max-num-causal 5 \
 		--out {output.output} \
 		--allow-missing
		"""

rule merge_finemapping_jobs_polysusie:
 	input: expand("output/polyfun_susie_HRC_finemap/{{ss}}_finemap.{snp}.gz", snp = LD_UKB_ranges.index.tolist())
 	output: "output/polyfun_susie_HRC_finemap/{ss}_polyfun_susie_all.txt.gz"
 	conda: "envs/polyfun.yml"
	resources: mem_mb = 8000
	shell:  "cat {input} >> {output}"


rule run_polyfun_finemap:
  	input:
  	    snpvar = expand("output/priors_suicide/suicide_l2-ldsc.{chr}.snpvar_ridge_constrained.gz", chr = CHR)
  	output:
  		output = expand("output/polyfun_finemap_HRC_finemap/{{ss}}_finemap_finemap.{{snp}}.gz", snp = LD_UKB_ranges.index.tolist())
  	params:
  	 	chrom = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['chrom_orig'],
  		pos = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['BP'],
  		start = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['range.left'],
  		end = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['range.right'],
 		ld_ranges = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['file'] 
  	conda: "envs/polyfun.yml"
	resources: mem_mb= 120000
  	shell: 
  		"""
  		python /sc/arion/projects/psychgen/software/polyfun/finemapper.py \
  		--geno /sc/arion/projects/psychgen/resources/genotype_ref_panel/HRC_fromBroad/chr1_22c/pop_EUR/HRC.r1-1.EGA.GRCh37.chr{params.chrom}.impute.plink.EUR \
  		--sumstats /sc/arion/projects/psychgen/bipolar/sandbox/output/priors_suicide/suicide_l2-ldsc.{params.chrom}.snpvar_ridge_constrained.gz \
  		--n 126872 \
  		--chr {params.chrom} \
  		--start {params.start} \
  		--end {params.end} \
  		--method finemap \
 		--finemap-exe /sc/arion/projects/psychgen/software/finemap_v1.4_x86_64/finemap_v1.4_x86_64 \
  		--max-num-causal 5 \
  		--out {output.output} \
  		--allow-missing
 		"""

rule merge_finemapping_jobs_polyfinemap:
 	input: expand("output/polyfun_finemap_HRC_finemap/{{ss}}_finemap_finemap.{snp}.gz", snp = LD_UKB_ranges.index.tolist())
 	output: "output/polyfun_finemap_HRC_finemap/{ss}_polyfun_finemap_all.txt.gz"
	conda: "envs/polyfun.yml"
	resources: mem_mb = 8000
 	shell:  "cat {input} >> {output}"


rule run_only_finemap:
 	input:
 	    snpvar = expand("output/priors_suicide/suicide_l2-ldsc.{chr}.snpvar_ridge_constrained.gz", chr = CHR)
 	output:
 		output = expand("output/only_finemap_HRC_finemap/{{ss}}_only_finemap.{{snp}}.gz", snp = LD_UKB_ranges.index.tolist())
 	params:
 	 	chrom = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['chrom_orig'],
 		pos = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['BP'],
 		start = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['range.left'],
 		end = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['range.right'],
		ld_ranges = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['file'] 
 	conda: "envs/polyfun.yml"
	resources: mem_mb = 120000
 	shell: 
 		"""
 		python /sc/arion/projects/psychgen/software/polyfun/finemapper.py \
 		--geno /sc/arion/projects/psychgen/resources/genotype_ref_panel/HRC_fromBroad/chr1_22c/pop_EUR/HRC.r1-1.EGA.GRCh37.chr{params.chrom}.impute.plink.EUR \
 		--sumstats /sc/arion/projects/psychgen/bipolar/sandbox/output/priors_suicide/suicide_l2-ldsc.{params.chrom}.snpvar_ridge_constrained.gz \
 		--n 126872 \
 		--chr {params.chrom} \
 		--start {params.start} \
 		--end {params.end} \
 		--method finemap \
		--finemap-exe /sc/arion/projects/psychgen/software/finemap_v1.4_x86_64/finemap_v1.4_x86_64 \
		--non-funct \
 		--max-num-causal 5 \
 		--out {output.output} \
 		--allow-missing
		"""


rule merge_finemapping_jobs_onlyfinemap:
	input: expand("output/only_finemap_HRC_finemap/{{ss}}_only_finemap.{snp}.gz", snp = LD_UKB_ranges.index.tolist())
	output: "output/only_finemap_HRC_finemap/{ss}_only_finemap_all.txt.gz"
	conda: "envs/polyfun.yml"
	resources: mem_mb = 8000
	shell:  "cat {input} >> {output}"


rule run_only_susie:
 	input:
 	    snpvar = expand("output/priors_suicide/suicide_l2-ldsc.{chr}.snpvar_ridge_constrained.gz", chr = CHR)
 	output:
 		output = expand("output/only_susie_HRC_finemap/{{ss}}_only_susie.{{snp}}.gz", snp = LD_UKB_ranges.index.tolist())
 	params:
 	 	chrom = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['chrom_orig'],
 		pos = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['BP'],
 		start = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['range.left'],
 		end = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['range.right'],
		ld_ranges = lambda wildcards: LD_UKB_ranges.loc[wildcards.snp]['file'] 
 	conda: "envs/polyfun.yml"
	resources: mem_mb = 120000
 	shell: 
 		"""
 		python /sc/arion/projects/psychgen/software/polyfun/finemapper.py \
 		--geno /sc/arion/projects/psychgen/resources/genotype_ref_panel/HRC_fromBroad/chr1_22c/pop_EUR/HRC.r1-1.EGA.GRCh37.chr{params.chrom}.impute.plink.EUR \
 		--sumstats /sc/arion/projects/psychgen/bipolar/sandbox/output/priors_suicide/suicide_l2-ldsc.{params.chrom}.snpvar_ridge_constrained.gz \
 		--n 126872 \
 		--chr {params.chrom} \
 		--start {params.start} \
 		--end {params.end} \
 		--method susie \
		--non-funct \
 		--max-num-causal 5 \
 		--out {output.output} \
 		--allow-missing
		"""

rule merge_finemapping_jobs_onlysusie:
	input: expand("output/only_susie_HRC_finemap/{{ss}}_only_susie.{snp}.gz", snp = LD_UKB_ranges.index.tolist())
	output: "output/only_susie_HRC_finemap/{ss}_only_susie_all.txt.gz"
	conda: "envs/polyfun.yml"
	resources: mem_mb = 8000
	shell:  "cat {input} >> {output}"
